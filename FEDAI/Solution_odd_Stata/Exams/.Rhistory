assigned_to_treatment <- Z.obs
condition.obs <- restricted.condition.block[,chosen.rand]
restricted.prob.z.1 <- rowMeans(restricted.Z.block==1, na.rm=TRUE)
restricted.prob.z.0 <- rowMeans(restricted.Z.block==0, na.rm=TRUE)
VA_gub_foranalysis <- data.frame(VA_gub_foranalysis, Z.obs, condition.obs,
restricted.prob.1, restricted.prob.2, restricted.prob.3,
restricted.prob.z.1, restricted.prob.z.0)
save(VA_gub_foranalysis, restricted.condition.block, restricted.Z.block, condition.block, Z.block, file="VAGubforanalysis.rdata")
library(plm)
install.packages("plm")
library(plm)
time <- 5
Ns <- c(20, 50, 500, 1000)
gammas <- c(.1, .5, .9)
sims <- 50
j <- 4
k <-2
N <- Ns[j]
gamma <- gammas[k]
N
gamma
coef.1step.sims <- rep(NA, sims)
coef.2step.sims <- rep(NA, sims)
for(l in 1:sims){
alphas <-  rnorm(N,1,1)  ##alpha i's
Y_mat <- matrix(NA, N, time)
Y_mat[,1] <- alphas + rnorm(N)
for (i in 2:time){
Y_mat[,i] <- (Y_mat[,i-1])*gamma +  rnorm(N)
}
Y <- as.vector(Y_mat)
timevar <- rep(1:5, each=N)
idvar <- rep(1:N, time)
plm.frame <- plm.data(data.frame(Y, idvar,timevar), c("idvar", "timevar"))
#fit.1step <- pgmm(Y ~ lag(Y, 1) | lag(Y,2:5), effect="individual", model="onestep", data=plm.frame)
fit.2step <- pgmm(Y ~ lag(Y, 1) | lag(Y,2:5), effect="individual", model="twosteps", data=plm.frame, robust=FALSE)
coef.1step.sims[l] <- fit.2step$coefficients[[1]]
coef.2step.sims[l] <- fit.2step$coefficients[[2]]
}
mean(coef.1step.sims)
mean(coef.2step.sims)
sqrt(mean((coef.1step.sims-gamma)^2))
sqrt(mean((coef.2step.sims-gamma)^2))
njs <- c(10, 50, 100)
zj <- rnorm(n=n_groups, mean=1, sd=1)
n_groups <- 10
njs <- c(10, 50, 100)
n_per_groups <- njs[1]
zj <- rnorm(n=n_groups, mean=1, sd=1)
zj
z_ij <- rep(zj, n_per_groups)
z_ij
z_ij <- rep(zj, each=n_per_groups)
z_ij
x_ij <- rnorm(n=(n_groups*n_per_groups), mean=2, sd=2)
x_ij
gamma_00 <- 0
beta_0j <- gamma_00 + gamma_01 + rnorm(n_groups)
gamma_00 <- 0
gamma_01 <- 1
gamma_10 <- 0
gamma_11 <- 2
beta_0j <- gamma_00 + gamma_01 + rnorm(n_groups)
beta_0j
beta_1j <- gamma_10 + gamma_11*zj + rnorm(n_groups)
beta_0j <- gamma_00 + gamma_01*zj + rnorm(n_groups)
beta_0j <- gamma_00 + gamma_01*zj + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*zj + rnorm(n_groups, mean=0, sd=1)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
xij <- rnorn(n_groups*n_per_groups, mean=2, sd=1)
xij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
beta_0ij
y_ij <- beta_0ij + beta_1ij*xij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*xij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
lm(y_ij ~ z_ij + x_ij)
sim.fit <- lm(y_ij ~ z_ij + x_ij)
gamma_11_ests[i] <- sim.fit$coefficients[1]
sim.fit$coefficients[1]
sim.fit$coefficients[2]
sims <- 500
gamma_11_ests <- rep(NA, sims)
sims <- 500
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=1)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
sim.fit <- lm(y_ij ~ z_ij + x_ij)
gamma_11_ests[i] <- sim.fit$coefficients[2]
}
hist(gamma_11_ests)
gamma_11
beta_1j
beta_1ij
n_per_groups <- njs[3]
sims <- 500
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=1)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
sim.fit <- lm(y_ij ~ z_ij + x_ij)
gamma_11_ests[i] <- sim.fit$coefficients[2]
}
hist(gamma_11_ests)
n_groups <- 100
njs <- c(10, 50, 100)
### Parameters
gamma_00 <- 0
gamma_01 <- 1
gamma_10 <- 0
gamma_11 <- 2
n_per_groups <- njs[3]
sims <- 500
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=1)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
sim.fit <- lm(y_ij ~ z_ij + x_ij)
gamma_11_ests[i] <- sim.fit$coefficients[2]
}
hist(gamma_11_ests)
n_groups <- 100
njs <- c(10, 50, 100)
### Parameters
gamma_00 <- 0
gamma_01 <- 0
gamma_10 <- 0
gamma_11 <- 2
n_per_groups <- njs[3]
sims <- 500
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=1)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
sim.fit <- lm(y_ij ~ z_ij + x_ij)
gamma_11_ests[i] <- sim.fit$coefficients[2]
}
hist(gamma_11_ests)
sim.fit <- lm(y_ij ~ z_ij + x_ij + x_ij*z_ij)
sim.fit
### PS5 Question 3
n_groups <- 100
njs <- c(10, 50, 100)
### Parameters
gamma_00 <- 0
gamma_01 <- 0
gamma_10 <- 0
gamma_11 <- 2
n_per_groups <- njs[3]
sims <- 500
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=1)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
sim.fit <- lm(y_ij ~ z_ij + x_ij + x_ij*z_ij)
gamma_11_ests[i] <- sim.fit$coefficients[2]
}
hist(gamma_11_ests)
### PS5 Question 3
n_groups <- 100
njs <- c(10, 50, 100)
### Parameters
gamma_00 <- 0
gamma_01 <- 0
gamma_10 <- 0
gamma_11 <- 2
n_per_groups <- njs[3]
sims <- 500
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=1)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
sim.fit <- lm(y_ij ~ z_ij + x_ij + x_ij*z_ij)
gamma_11_ests[i] <- sim.fit$coefficients[4]
}
hist(gamma_11_ests)
### PS5 Question 3
n_groups <- 100
njs <- c(10, 50, 100)
### Parameters
gamma_00 <- 0
gamma_01 <- 0
gamma_10 <- 1
gamma_11 <- 3
n_per_groups <- njs[3]
sims <- 500
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=1)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
sim.fit <- lm(y_ij ~ z_ij + x_ij + x_ij*z_ij)
gamma_11_ests[i] <- sim.fit$coefficients[4]
}
hist(gamma_11_ests)
vars_u_1j <- c(1, 2, 3)
var_u_1j <- vars_u_1j[1]
n_groups <- 10
njs <- c(10, 50, 100)
vars_u_1j <- c(1, 2, 3)
### Parameters
gamma_00 <- 0
gamma_01 <- 0
gamma_10 <- 1
gamma_11 <- 3
sims <- 500
rmse <- matrix(NA, length(njs), length(vars_u_1j))
bias <- matrix(NA, length(njs), length(vars_u_1j))
rmse
### PS5 Question 3
n_groups <- 10
njs <- c(10, 50, 100)
vars_u_1j <- c(1, 2, 3)
### Parameters
gamma_00 <- 0
gamma_01 <- 0
gamma_10 <- 1
gamma_11 <- 3
sims <- 500
rmse <- matrix(NA, length(njs), length(vars_u_1j))
bias <- matrix(NA, length(njs), length(vars_u_1j))
for(j in 1:length(njs)){
for(k in 1:length(vars_u_1j)){
n_per_groups <- njs[j]
var_u_1j <- vars_u_1j[k]
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=var_u_1j)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
### estimation
sim.fit <- lm(y_ij ~ z_ij + x_ij + x_ij*z_ij)
gamma_11_ests[i] <- sim.fit$coefficients[4]
}
rmse[j,k] <- sqrt(mean((gamma_11_ests - gamma_11)^2))
bias[j,k] <- mean(gamma_11_ests - gamma_11) - gamma_11
}
}
rmse
bias
gamma_11_ests
### PS5 Question 3
n_groups <- 10
njs <- c(10, 50, 100)
vars_u_1j <- c(1, 2, 3)
### Parameters
gamma_00 <- 0
gamma_01 <- 0
gamma_10 <- 1
gamma_11 <- 3
sims <- 500
rmse <- matrix(NA, length(njs), length(vars_u_1j))
bias <- matrix(NA, length(njs), length(vars_u_1j))
for(j in 1:length(njs)){
for(k in 1:length(vars_u_1j)){
n_per_groups <- njs[j]
var_u_1j <- vars_u_1j[k]
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=var_u_1j)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
### estimation
sim.fit <- lm(y_ij ~ z_ij + x_ij + x_ij*z_ij)
gamma_11_ests[i] <- sim.fit$coefficients[4]
}
rmse[j,k] <- sqrt(mean((gamma_11_ests - gamma_11)^2))
bias[j,k] <- mean(gamma_11_ests) - gamma_11
}
}
rmse
bias
### PS5 Question 3
n_groups <- 10
njs <- c(10, 50, 100)
vars_u_1j <- c(1, 2, 3)
### Parameters
gamma_00 <- 0
gamma_01 <- 0
gamma_10 <- 1
gamma_11 <- 3
sims <- 5000
rmse <- matrix(NA, length(njs), length(vars_u_1j))
bias <- matrix(NA, length(njs), length(vars_u_1j))
for(j in 1:length(njs)){
for(k in 1:length(vars_u_1j)){
n_per_groups <- njs[j]
var_u_1j <- vars_u_1j[k]
gamma_11_ests <- rep(NA, sims)
for(i in 1:sims){
### Fake Data at group level
z_j <- rnorm(n=n_groups, mean=1, sd=1)
beta_0j <- gamma_00 + gamma_01*z_j + rnorm(n_groups, mean=0, sd=1)
beta_1j <- gamma_10 + gamma_11*z_j + rnorm(n_groups, mean=0, sd=var_u_1j)
### at individual level
z_ij <- rep(z_j, each=n_per_groups)
beta_0ij <- rep(beta_0j, each=n_per_groups)
beta_1ij <- rep(beta_1j, each=n_per_groups)
x_ij <- rnorm(n_groups*n_per_groups, mean=2, sd=1)
y_ij <- beta_0ij + beta_1ij*x_ij + rnorm(n_groups*n_per_groups, mean=0, sd=1)
### estimation
sim.fit <- lm(y_ij ~ z_ij + x_ij + x_ij*z_ij)
gamma_11_ests[i] <- sim.fit$coefficients[4]
}
rmse[j,k] <- sqrt(mean((gamma_11_ests - gamma_11)^2))
bias[j,k] <- mean(gamma_11_ests) - gamma_11
}
}
rmse
bias
colnames(rmse)<- colnames(bias) <- c("VarU1j = 1", "VarU1j = 4", "VarU1j = 9")
colnames(rmse) <- colnames(bias) <- c("VarU1j = 1", "VarU1j = 4", "VarU1j = 9")
rownames(rmse) <- rownames(bias) <- c("Nj=10", "Nj=50", "Nj=100")
library(xtable)
xtable(rmse, caption="RMSE")
xtable(rmse, caption="RMSE")
xtable(bias, caption="Bias")
sample(1:4, 2, replace=FALSE)
sample(1:4, 2, replace=FALSE)
TX <- read.table("Desktop/pir_sos_1972/pir_sos_20131008160538_12389_1972_1.txt")
library(data.table)
install.packages("data.table")
2+2
install.packages("data.table")
library(data.table)
TX <- fread("Desktop/pir_sos_1972/pir_sos_20131008160538_12389_1972_1.txt")
TX <- fread("Desktop/pir_sos_1972/pir_sos_20131008160538_12389_1972_2.txt")
TX <- fread("Desktop/pir_sos_1972/pir_sos_20131008160557_12389_1972_2.txt")
install.packages("knitr", "xtable", "stargazer", "RI")
install.packages("knitr")
install.packages("xtable")
install.packages("stargazer")
rm(list=ls())
library(knitr)
library(foreign)
library(xtable)
library(stargazer)
# set global chunk options
opts_chunk$set(fig.path='figure/midterm', fig.align='center', fig.show='hold', out.width = '4in', out.height='4in', tidy=FALSE)
options(replace.assign=TRUE,width=90)
install.packages("ri")
install.packages("plyr")
install.packages("lmtest")
install.packages("sandwich")
rm(list=ls())
library(foreign)
library(ri)
library(plyr)
library(xtable)
library(sandwich)
library(lmtest)
library(stargazer)
setwd("/Users/Alex/Documents/Dropbox/Columbia/spring 2014/experiments2014/fedai homework solutions/Exams/")
nyc <- read.dta("NYC Fundraising --blocking example.dta")
nyc <- within(nyc,{
block <- as.character(block)
})
setwd("~/Documents/Dropbox/Columbia/spring 2014/experiments2014/fedai homework solutions/Exams/")
nyc <- read.dta("NYC Fundraising --blocking example.dta")
nyc <- within(nyc,{
block <- as.character(block)
})
blockmeans <- ddply(nyc, c("block"), summarize,
control_mean = mean(amount_donated[policy_postcard==0]),
control_sd = sd(amount_donated[policy_postcard==0]),
control_n = length(amount_donated[policy_postcard==0]),
treatment_mean = mean(amount_donated[policy_postcard==1]),
treatment_sd = sd(amount_donated[policy_postcard==1]),
treatment_n = length(amount_donated[policy_postcard==1]))
print(xtable(blockmeans,caption="Distribution of Donations, by Experimental Group"), include.rownames=FALSE, caption.placement="top")
fit.1 <- lm(amount_donated ~ policy_postcard, data=subset(nyc, block==1))
fit.2 <- lm(amount_donated ~ policy_postcard, data=subset(nyc, block==2))
fit.3 <- lm(amount_donated ~ policy_postcard, data=subset(nyc, block==3))
fit.4 <- lm(amount_donated ~ policy_postcard, data=subset(nyc, block==4))
fit.5 <- lm(amount_donated ~ policy_postcard, data=subset(nyc, block==5))
commarobust <- function(fit){
coeftest(fit,vcovHC(fit,type="HC1"))
}
fit.1.r <- commarobust(fit.1)
fit.2.r <- commarobust(fit.2)
fit.3.r <- commarobust(fit.3)
fit.4.r <- commarobust(fit.4)
fit.5.r <- commarobust(fit.5)
stargazer(fit.1, fit.2, fit.3, fit.4, fit.5,type="text", omit.stat = c("f", "adj.rsq", "ser"), style="apsr",
column.labels=c("Block 1", "Block 2", "Block 3","Block 4","Block 5"), model.numbers=FALSE,
notes = "Robust Standard Errors in Parentheses",
se=list(fit.1.r[,2],fit.2.r[,2],fit.3.r[,2],fit.4.r[,2],fit.5.r[,2]))
stargazer(fit.1, fit.2, fit.3, fit.4, fit.5,type="text", omit.stat = c("f", "adj.rsq", "ser"), style="apsr",
covariate.labels=c("Treatment", "Constant"),
dep.var.labels="Amount Donated",
column.labels=c("Block 1", "Block 2", "Block 3","Block 4","Block 5"), model.numbers=FALSE,
notes = "Robust Standard Errors in Parentheses",
se=list(fit.1.r[,2],fit.2.r[,2],fit.3.r[,2],fit.4.r[,2],fit.5.r[,2]))
stargazer(fit.1, fit.2, fit.3, fit.4, fit.5,omit.stat = c("f", "adj.rsq", "ser"), style="apsr",
covariate.labels=c("Treatment", "Constant"),
dep.var.labels="Amount Donated",
column.labels=c("Block 1", "Block 2", "Block 3","Block 4","Block 5"), model.numbers=FALSE,
notes = "Robust Standard Errors in Parentheses",
se=list(fit.1.r[,2],fit.2.r[,2],fit.3.r[,2],fit.4.r[,2],fit.5.r[,2]))
xtable(t(c(ate,pvalue.2sided ))
)
probs <- genprobexact(Z=Z, blockvar=block)
Z <- nyc$policy_postcard
block <- nyc$block
Y <- nyc$amount_donated
probs <- genprobexact(Z=Z, blockvar=block)
ate <- estate(Y=Y, Z=Z, prob=probs)
perms <- genperms(Z=Z, blockvar=block, maxiter=100)
xtable(t(c(ate,0.0317))
)
xtable(matrix(ate,0.0317))
xtable(matrix(c(ate,0.0317)))
table3 <- cbind(ate, 0.0317)
table3
table3 <- rbind(ate, 0.0317)
table3
rownames(table3) <- c("Estimate from inverse probability weighted regression", "Two-sided p-value from randomization inference")
table3
xtable(table3, caption="Randomization Inference")
print(xtable(table3, caption="Randomization Inference"), caption.placement="top")
xtable(fit.weighted.r)
@
fit.weighted <- lm(Y ~ Z, weights=1/probs * Z + (1/(1-probs))*(1-Z))
fit.weighted.r <- commarobust(fit.weighted)
xtable(fit.weighted.r)
fit.weighted.r
str(fit.weighted.r)
fit.weighted.r[2]
fit.weighted.r[[2]]
xtable(as.matrix(fit.weighted.r))
as.matrix(fit.weighted.r)
fit.weighted.r[]
xtable(fit.weighted.r[])
fit.all <- lm(amount_donated ~ policy_postcard + as.factor(block), data=nyc)
fit.all.r <- commarobust(fit.all)
fit.all.r
fit.all <- lm(Y ~ Z + as.factor(block), data=nyc)
fit.all.r <- commarobust(fit.all)
fit.all.r
?stargazer
