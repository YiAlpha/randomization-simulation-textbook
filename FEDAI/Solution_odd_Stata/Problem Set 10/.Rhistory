library(foreign)
bhav <- na.omit(read.dta("/Users/penelope/Dropbox/Columbia/Spring 2014/Experiments2014/FEDAI AEC Data and R Programs/Chapter 10/Chapter 10_Bhavnani (2009) Dataset.dta"))
Z <- as.integer(bhav$controltreat) - 1     # treatment: reservations for women candidates
Y <- bhav$turnout                          # an intermediate outcome: turnout
probs <- genprobexact(Z)                # generate probability of treatment
library(ri)
probs <- genprobexact(Z)                # generate probability of treatment
ate <- estate(Y,Z,prob=probs)           # estimate the ITT (ATE of assignment to reservation)
ate
numiter <- 10000
perms <- genperms(Z,maxiter=numiter)
Ys <- genouts(Y,Z,ate=0)       # create potential outcomes under the sharp null of no effect for any unit
distout <- gendist(Ys,perms,prob=probs)    # generate the sampling distribution  based on the schedule of potential outcomes implied by the null hypothesis
ate
sum(distout >= ate)
sum(abs(distout) >= abs(ate))
mean(distout >= ate)
mean(abs(distout) >= abs(ate))
p.value.two.sided <- mean(abs(distout) >= abs(ate))
p.value.two.sided
testvar <- var(Y[Z==1]) - var(Y[Z==0])
varlist <- rep(NA,numiter)
for (i in 1:dim(perms)[2]) {
Zri <- perms[,i]
varlist[i] <- var(Y[Zri==1]) - var(Y[Zri==0])
}
mean(varlist >= testvar)             # p-value for one-tailed comparison
mean(abs(varlist) >= abs(testvar))   # p-value for testing unequal variances
Y <- c(rep(0, 400), rep(1, 0), rep(0, 10), rep(1, 90), rep(0, 300), rep(1, 0), rep(0, 100), rep(1, 100)()
Y <- c(rep(0, 400), rep(1, 0), rep(0, 10), rep(1, 90), rep(0, 300), rep(1, 0), rep(0, 100), rep(1, 100))
Z <- c(rep(0, 500), rep(1, 500))
Y <- c(rep(0, 400), rep(1, 0), rep(0, 10), rep(1, 90), rep(0, 300), rep(1, 0), rep(0, 100), rep(1, 100))
Z <- c(rep(0, 500), rep(1, 500))
M <- c(rep(0, 400), rep(0, 0), rep(1, 10), rep(1, 90), rep(0, 300), rep(0, 0), rep(1, 100), rep(1, 100))
lm(Y~ Z + M)
0.158*2586
round(0.158*2586)
Y <- c(rep(1, round(0.0158*2586)), rep(0, 2586 - round(0.0158*2586)),
rep(1, round(0.0862*6858)), rep(0, 6858 - round(0.0862*6858)),
rep(1, round(0.0967*6694)), rep(0, 6694 - round(0.0967*6694)),
rep(1, round(0.0823*6825)), rep(0, 6825 - round(0.0823*6825)),
rep(1, round(0.0970*6960)), rep(0, 6960 - round(0.0970*6960)),
rep(1, round(0.0819*6920)), rep(0, 6920 - round(0.0932*6920)),
rep(1, round(0.0932*6750)), rep(0, 6750 - round(0.0932*6750)))
rm(list-ls())
rm(list=ls())
condition <- c(rep("No Mail", 2586), rep("Standard", 6858), rep("Threat", 6694), rep("Norms", 6825),
rep("Threat+Norms", 6960), rep("Fairness", 6920), rep("Threat+Fairness", 6750))
Y <- c(rep(1, round(0.0158*2586)), rep(0, 2586 - round(0.0158*2586)),
rep(1, round(0.0862*6858)), rep(0, 6858 - round(0.0862*6858)),
rep(1, round(0.0967*6694)), rep(0, 6694 - round(0.0967*6694)),
rep(1, round(0.0823*6825)), rep(0, 6825 - round(0.0823*6825)),
rep(1, round(0.0970*6960)), rep(0, 6960 - round(0.0970*6960)),
rep(1, round(0.0819*6920)), rep(0, 6920 - round(0.0932*6920)),
rep(1, round(0.0932*6750)), rep(0, 6750 - round(0.0932*6750)))
rep("Threat+Norms", 6960), rep("Fairness", 6920), rep("Threat+Fairness", 6750))
Y <- c(rep(1, round(0.0158*2586)), rep(0, 2586 - round(0.0158*2586)),
rep(1, round(0.0862*6858)), rep(0, 6858 - round(0.0862*6858)),
rep(1, round(0.0967*6694)), rep(0, 6694 - round(0.0967*6694)),
rep(1, round(0.0823*6825)), rep(0, 6825 - round(0.0823*6825)),
rep(1, round(0.0970*6960)), rep(0, 6960 - round(0.0970*6960)),
rep(1, round(0.0819*6920)), rep(0, 6920 - round(0.0819*6920)),
rep(1, round(0.0932*6750)), rep(0, 6750 - round(0.0932*6750)))
lm(Y~condition)
?grep
no_mail <- grepl(pattern="Mail", condition)
no_mail
no_mail <- as.numeric(grepl(pattern="Mail", condition))
no_mail
norms <- as.numeric(grepl(pattern="Norms", condition))
fairness <- as.numeric(grepl(pattern="Fairness", condition))
no_mail <- as.numeric(grepl(pattern="Mail", condition))
standard <- as.numeric(grepl(pattern="Standard", condition))
threat <- as.numeric(grepl(pattern="Threat", condition))
norms <- as.numeric(grepl(pattern="Norms", condition))
fairness <- as.numeric(grepl(pattern="Fairness", condition))
lm(Y~no_mail + standard + threat + norms + fairness + threat:norms + threat:fairness)
lm(Y~no_mail + standard + threat + norms + fairness + threat:norms + threat:fairness - 1)
lm(Y~condition)
lm(Y~condition - 1)
lm(Y~no_mail + standard + threat + norms + fairness + threat:norms + threat:fairness)
lm(Y~relevel(condition, ref="No Mail" - 1)
lm(Y~relevel(condition, ref="No Mail" - 1))
lm(Y~relevel(as.factor(condition), ref="No Mail" - 1))
lm(Y~relevel(as.factor(condition), ref="No Mail") - 1)
rm(list=ls())
condition <- c(rep("No Mail", 2586), rep("Standard", 6858), rep("Threat", 6694), rep("Norms", 6825),
rep("Threat+Norms", 6960), rep("Fairness", 6920), rep("Threat+Fairness", 6750))
no_mail <- as.numeric(grepl(pattern="Mail", condition))
standard <- as.numeric(grepl(pattern="Standard", condition))
threat <- as.numeric(grepl(pattern="Threat", condition))
norms <- as.numeric(grepl(pattern="Norms", condition))
fairness <- as.numeric(grepl(pattern="Fairness", condition))
Y <- c(rep(1, round(0.0158*2586)), rep(0, 2586 - round(0.0158*2586)),
rep(1, round(0.0862*6858)), rep(0, 6858 - round(0.0862*6858)),
rep(1, round(0.0967*6694)), rep(0, 6694 - round(0.0967*6694)),
rep(1, round(0.0823*6825)), rep(0, 6825 - round(0.0823*6825)),
rep(1, round(0.0970*6960)), rep(0, 6960 - round(0.0970*6960)),
rep(1, round(0.0819*6920)), rep(0, 6920 - round(0.0819*6920)),
rep(1, round(0.0932*6750)), rep(0, 6750 - round(0.0932*6750)))
fit.1 <- lm(Y~no_mail + standard + threat + norms + fairness + threat:norms + threat:fairness)
summary(fit.1)
fit.1 <- lm(Y~no_mail + standard + threat + norms + fairness + threat:norms + threat:fairness - 1)
summary(fit.1)
library(mediation)
N <- 1000
probs_MZ0 <- runif(N)
probs_MZ0 <- runif(N)
YZ0M0 <- rnorm(N, 10*probs_MZ0, 1)
YZ0M1 <- YZ0M0 + 2
YZ1M0 <- YZ0M0 + 1
YZ1M1 <- YZ0M0 + 3
M_Z0 <- rbinom(N, size=1, prob=probs_MZ0)
M_Z1 <- M_Z0
M_Z1[M_Z0==0] <- rbinom(length(M_Z1[M_Z0==0]), size=1, prob=.5)
true_ATE <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ATE
true_ACME_Z1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)))
true_ACME_Z0 <- mean((YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ACME_Z1
true_ACME_Z0
true_ADE_M1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)))
true_ADE_M0 <- mean((YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ADE_M1
true_ADE_M0
true_ATE_m <- mean(M_Z1-M_Z0)
true_ATE_m
Z <- rbinom(N, size=1, .5)
### Reveal Potential Outcomes
M.obs <- Z*M_Z1 + (1-Z)*M_Z0
Y.obs <- rep(NA, N)
Y.obs[Z==1 & M.obs==1] <- YZ1M1[Z==1 & M.obs==1]
Y.obs[Z==1 & M.obs==0] <- YZ1M0[Z==1 & M.obs==0]
Y.obs[Z==0 & M.obs==1] <- YZ0M1[Z==0 & M.obs==1]
Y.obs[Z==0 & M.obs==0] <- YZ0M0[Z==0 & M.obs==0]
## ATE Estimate
summary(lm(Y.obs ~ Z))
model.m <- lm(M.obs ~ Z)
model.y <- lm(Y.obs ~ Z + M.obs + M.obs*Z)
# Pass model objects through mediate function
med.cont <- mediate(model.m=model.m, model.y=model.y, treat="Z", mediator="M.obs", sims=50)
summary(med.cont)
true_ATE
true_ACME_Z1
true_ACME_Z0
true_ADE_M1
true_ADE_M0
true_ATE_m
# Pass model objects through mediate function
med.cont <- mediate(model.m=model.m, model.y=model.y, treat="Z", mediator="M.obs", sims=50)
summary(med.cont)
true_ACME_Z0
true_ACME_Z1
true_ADE_M0
true_ADE_M1
true_ATE
YZ0M0 <- rnorm(N, 5, 1)
YZ0M1 <- YZ0M0 + 2
YZ1M0 <- YZ0M0 + 1
YZ1M1 <- YZ0M0 + 3
M_Z0 <- rbinom(N, size=1, prob=probs_MZ0)
M_Z1 <- M_Z0
M_Z1[M_Z0==0] <- rbinom(length(M_Z1[M_Z0==0]), size=1, prob=.5)
true_ATE <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ATE
true_ACME_Z1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)))
true_ACME_Z0 <- mean((YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ACME_Z1
true_ACME_Z0
true_ADE_M1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)))
true_ADE_M0 <- mean((YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ADE_M1
true_ADE_M0
true_ATE_m <- mean(M_Z1-M_Z0)
true_ATE_m
Z <- rbinom(N, size=1, .5)
### Reveal Potential Outcomes
M.obs <- Z*M_Z1 + (1-Z)*M_Z0
Y.obs <- rep(NA, N)
Y.obs[Z==1 & M.obs==1] <- YZ1M1[Z==1 & M.obs==1]
Y.obs[Z==1 & M.obs==0] <- YZ1M0[Z==1 & M.obs==0]
Y.obs[Z==0 & M.obs==1] <- YZ0M1[Z==0 & M.obs==1]
Y.obs[Z==0 & M.obs==0] <- YZ0M0[Z==0 & M.obs==0]
## ATE Estimate
summary(lm(Y.obs ~ Z))
model.m <- lm(M.obs ~ Z)
model.y <- lm(Y.obs ~ Z + M.obs + M.obs*Z)
# Pass model objects through mediate function
med.cont <- mediate(model.m=model.m, model.y=model.y, treat="Z", mediator="M.obs", sims=50)
summary(med.cont)
true_ACME_Z0
true_ACME_Z1
true_ADE_M0
true_ADE_M1
true_ATE
library(mediation)
N <- 1000
#probs_MZ0 <- runif(N)
#YZ0M0 <- rnorm(N, 10*probs_MZ0, 1)
YZ0M0 <- rnorm(N, 5, 1)
YZ0M1 <- YZ0M0 + 2
YZ1M0 <- YZ0M0 + 1
YZ1M1 <- YZ0M0 + 3
M_Z0 <- rbinom(N, size=1, prob=probs_MZ0)
M_Z1 <- M_Z0
M_Z1[M_Z0==0] <- rbinom(length(M_Z1[M_Z0==0]), size=1, prob=.5)
true_ATE <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ATE
true_ACME_Z1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)))
true_ACME_Z0 <- mean((YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ACME_Z1
true_ACME_Z0
true_ADE_M1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)))
true_ADE_M0 <- mean((YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ADE_M1
true_ADE_M0
true_ATE_m <- mean(M_Z1-M_Z0)
true_ATE_m
Z <- rbinom(N, size=1, .5)
### Reveal Potential Outcomes
M.obs <- Z*M_Z1 + (1-Z)*M_Z0
Y.obs <- rep(NA, N)
Y.obs[Z==1 & M.obs==1] <- YZ1M1[Z==1 & M.obs==1]
Y.obs[Z==1 & M.obs==0] <- YZ1M0[Z==1 & M.obs==0]
Y.obs[Z==0 & M.obs==1] <- YZ0M1[Z==0 & M.obs==1]
Y.obs[Z==0 & M.obs==0] <- YZ0M0[Z==0 & M.obs==0]
## Estimate eq. 10.1 and 10.3
model.m <- lm(M.obs ~ Z)
model.y <- lm(Y.obs ~ Z + M.obs)
# Pass model objects through mediate function
med.cont <- mediate(model.m=model.m, model.y=model.y, treat="Z", mediator="M.obs", sims=50)
summary(med.cont)
true_ACME_Z0
true_ACME_Z1
true_ADE_M0
true_ADE_M1
true_ATE
probs_MZ0 <- runif(N)
YZ0M0 <- rnorm(N, 10*probs_MZ0, 1)
#YZ0M0 <- rnorm(N, 5, 1)
YZ0M1 <- YZ0M0 + 2
YZ1M0 <- YZ0M0 + 1
YZ1M1 <- YZ0M0 + 3
M_Z0 <- rbinom(N, size=1, prob=probs_MZ0)
M_Z1 <- M_Z0
M_Z1[M_Z0==0] <- rbinom(length(M_Z1[M_Z0==0]), size=1, prob=.5)
true_ATE <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ATE
true_ACME_Z1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)))
true_ACME_Z0 <- mean((YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ACME_Z1
true_ACME_Z0
true_ADE_M1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)))
true_ADE_M0 <- mean((YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ADE_M1
true_ADE_M0
true_ATE_m <- mean(M_Z1-M_Z0)
true_ATE_m
Z <- rbinom(N, size=1, .5)
### Reveal Potential Outcomes
M.obs <- Z*M_Z1 + (1-Z)*M_Z0
Y.obs <- rep(NA, N)
Y.obs[Z==1 & M.obs==1] <- YZ1M1[Z==1 & M.obs==1]
Y.obs[Z==1 & M.obs==0] <- YZ1M0[Z==1 & M.obs==0]
Y.obs[Z==0 & M.obs==1] <- YZ0M1[Z==0 & M.obs==1]
Y.obs[Z==0 & M.obs==0] <- YZ0M0[Z==0 & M.obs==0]
## Estimate eq. 10.1 and 10.3
model.m <- lm(M.obs ~ Z)
model.y <- lm(Y.obs ~ Z + M.obs)
# Pass model objects through mediate function
med.cont <- mediate(model.m=model.m, model.y=model.y, treat="Z", mediator="M.obs", sims=50)
summary(med.cont)
true_ACME_Z0
true_ACME_Z1
true_ADE_M0
true_ADE_M1
true_ATE
medsens(x=med.cont, rho.by=.1)
sensitivity <- medsens(x=med.cont, rho.by=.1)
sensitivity
plot(sensitivity)
?medsens
sensitivity <- medsens(x=med.cont, rho.by=.1)
plot(sensitivity)
true_ACME_Z0
true_ACME_Z0
library(mediation)
N <- 1000
probs_MZ0 <- runif(N)
YZ0M0 <- rnorm(N, 10*probs_MZ0, 10)
#YZ0M0 <- rnorm(N, 5, 1)
YZ0M1 <- YZ0M0 + 2
YZ1M0 <- YZ0M0 + 1
YZ1M1 <- YZ0M0 + 3
M_Z0 <- rbinom(N, size=1, prob=probs_MZ0)
M_Z1 <- M_Z0
M_Z1[M_Z0==0] <- rbinom(length(M_Z1[M_Z0==0]), size=1, prob=.5)
true_ATE <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ATE
true_ACME_Z1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)))
true_ACME_Z0 <- mean((YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ACME_Z1
true_ACME_Z0
true_ADE_M1 <- mean((YZ1M1*M_Z1 + YZ1M0 *(1-M_Z1)) - (YZ0M1*M_Z1 + YZ0M0 *(1-M_Z1)))
true_ADE_M0 <- mean((YZ1M1*M_Z0 + YZ1M0 *(1-M_Z0)) - (YZ0M1*M_Z0 + YZ0M0 *(1-M_Z0)))
true_ADE_M1
true_ADE_M0
true_ATE_m <- mean(M_Z1-M_Z0)
true_ATE_m
Z <- rbinom(N, size=1, .5)
### Reveal Potential Outcomes
M.obs <- Z*M_Z1 + (1-Z)*M_Z0
Y.obs <- rep(NA, N)
Y.obs[Z==1 & M.obs==1] <- YZ1M1[Z==1 & M.obs==1]
Y.obs[Z==1 & M.obs==0] <- YZ1M0[Z==1 & M.obs==0]
Y.obs[Z==0 & M.obs==1] <- YZ0M1[Z==0 & M.obs==1]
Y.obs[Z==0 & M.obs==0] <- YZ0M0[Z==0 & M.obs==0]
## Estimate eq. 10.1 and 10.3
model.m <- lm(M.obs ~ Z)
model.y <- lm(Y.obs ~ Z + M.obs)
# Pass model objects through mediate function
med.cont <- mediate(model.m=model.m, model.y=model.y, treat="Z", mediator="M.obs", sims=50)
summary(med.cont)
true_ACME_Z0
true_ACME_Z1
true_ADE_M0
true_ADE_M1
true_ATE
sensitivity <- medsens(x=med.cont, rho.by=.1)
plot(sensitivity)
