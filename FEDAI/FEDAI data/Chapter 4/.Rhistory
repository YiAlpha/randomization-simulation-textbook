levels(cgss$eng_speak) <-c('not understand', 'poor', 'so so', 'fair', 'very good')
cgss <-cgss%>%mutate(marriage = ifelse(a69>0, a69, NA))
cgss$marriage <- as.factor(cgss$marriage)
levels(cgss$marriage) <-c('unmarried', 'cohabiting', 'married_1st', 'remarried',
'seperating', 'divorced', 'widowed')
gss <- cgss %>%
select(-c(a69,a7a,a2 ,a62 ,a8a ,a8b ,
a285,a51 ,a52, a301, a302, a303))
lm1 <- lm(a421 ~ age + educ + sex + lg_hinc + lg_pinc+ lg_pwinc + marriage, data = cgss)
lm1 <- lm(a421 ~ age + educ + sex + lg_hinc + lg_pinc+ lg_pwinc + marriage, data = gss)
lm1 <- lm(stereotype ~ age + educ + sex + lg_hinc + lg_pinc+ lg_pwinc + marriage,
data = gss)
lm2 <- lm(stereotype ~ . , data = gss)
stargazer::stargazer(lm1 , lm2, type = 'text')
cgss <-cgss%>%mutate(eng_listen = ifelse(a51>0, a51, NA))
cgss$eng_listen <- as.factor(cgss$eng_listen)
levels(cgss$eng_listen) <-c('not understand', 'poor', 'so so', 'fair', 'very good')
cgss <-cgss%>%mutate(eng_speak = ifelse(a52>0, a52, NA))
cgss$eng_listen <- as.factor(cgss$eng_speak)
levels(cgss$eng_speak) <-c('not understand', 'poor', 'so so', 'fair', 'very good')
cgss <-cgss%>%mutate(eng_speak = ifelse(a52>0, a52, NA))
cgss$eng_speak <- as.factor(cgss$eng_speak)
levels(cgss$eng_speak) <-c('not understand', 'poor', 'so so', 'fair', 'very good')
cgss <-cgss%>%mutate(eng_listen = ifelse(a51>0, a51, NA))
cgss$eng_listen <- as.factor(cgss$eng_listen)
levels(cgss$eng_listen) <-c('not understand', 'poor', 'so so', 'fair', 'very good')
cgss <-cgss%>%mutate(eng_speak = ifelse(a52>0, a52, NA))
cgss$eng_speak <- as.factor(cgss$eng_speak)
levels(cgss$eng_speak) <-c('not understand', 'poor', 'so so', 'fair', 'very good')
gss <- cgss %>%
select(-c(a69,a7a,a2 ,a62 ,a8a ,a8b ,
a285,a51 ,a52, a301, a302, a303))
lm1 <- lm(stereotype ~ age + educ + sex + lg_hinc + lg_pinc+ lg_pwinc + marriage,
data = gss)
lm2 <- lm(stereotype ~ . , data = gss)
stargazer::stargazer(lm1 , lm2, type = 'text')
lm1 <- lm(stereotype ~ age + educ + sex + lg_hinc + lg_pinc+ lg_pwinc + marriage,
data = gss)
summary(lm1)
lm2 <- lm(stereotype ~ age + educ + sex + lg_hinc + lg_pinc+ lg_pwinc +
marriage + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm2)
stargazer::stargazer(lm1 , lm2, type = 'text')
lm3 <- lm(stereotype ~ age + educ*sex + lg_hinc + lg_pinc+ lg_pwinc +
marriage + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm3)
lm4 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc+ lg_pwinc +
marriage*sex + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm4)
lm5 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc*sex+ lg_pwinc +
marriage + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm5)
lm5 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc*sex+ lg_pwinc +
marriage + as.numeric(internet_use), data = gss)
summary(lm5)
lm4 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc +
marriage*sex + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm4)
lm4 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc +
marriage*sex + as.numeric(internet_use)  data = gss)
lm4 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc +
marriage*sex + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm4)
lm4 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc+ lg_pwinc +
marriage*sex + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm4)
ques_search("子女")
table(data$a68a)
gss$kid_u18 <- case_when(data$a68a>0 ~ 1,
data$a68a==-8 ~ NA_real_,
data$a68a==0 ~0)
lm5 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc+ lg_pwinc + kid_u18+
marriage + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm5)
lm5 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc+ lg_pwinc + sex*kid_u18+
marriage + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm5)
lm4 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc+ lg_pwinc +
marriage + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm4)
lm4 <- lm(stereotype ~ age + educ+ lg_hinc + lg_pinc+ lg_pwinc +
marriage*sex + as.numeric(internet_use) +
as.numeric(eng_listen)+ as.numeric(eng_speak), data = gss)
summary(lm4)
cgss <-cgss%>%mutate(hinc_10k = case_when(a62 < 0 ~ NA_real_,
a62 ==0 ~ 0,
a62 >0 ~ as.numeric(a62)/10000))%>%
mutate(pinc_10k = case_when(a8a < 0 ~ NA_real_,
a8a ==0 ~ 0,
a8a >0 ~ as.numeric(a8a)/10000))%>%
mutate(pwinc_10k = case_when(a8b < 0 ~ NA_real_,
a8b ==0 ~ 0,
a8b >0 ~ as.numeric(a8b)/10000))
gss <- cgss %>%
select(-c(a69,a7a,a2 ,a62 ,a8a ,a8b ,
a285,a51 ,a52, a301, a302, a303))
stargazer::stargazer(gss, type = 'text')
xtable::xtable(gss, type = 'text')
install.packages('qwraps2')
library(qwraps2)
options(qwraps2_markup = "markdown")
summary_table(gss)
our_summary1 <-
list("Age" =
list("min" = ~ min(age),
"max" = ~ max(age),
"mean (sd)" = ~ qwraps2::mean_sd(age)),
"Education" =
list("No Education" = ~ qwraps2::n_perc0(educ == 1),
"Elementary"  = ~ qwraps2::n_perc0(educ == 2),
"Middle School"  = ~ qwraps2::n_perc0(educ == 3),
"High School"  = ~ qwraps2::n_perc0(educ == 4),
"University and Above"  = ~ qwraps2::n_perc0(educ == 5))
)
summary_table(gss, our_summary1)
our_summary1 <-
list("Age" =
list("min" = ~ min(age),
"max" = ~ max(age),
"mean (sd)" = ~ qwraps2::mean_sd(age)),
"Education" =
list("No Education" = ~ qwraps2::n_perc0(educ == 'no_educ'),
"Elementary"  = ~ qwraps2::n_perc0(educ == 2),
"Middle School"  = ~ qwraps2::n_perc0(educ == 3),
"High School"  = ~ qwraps2::n_perc0(educ == 4),
"University and Above"  = ~ qwraps2::n_perc0(educ == 5))
)
summary_table(gss, our_summary1)
table(gss$educ)
our_summary1 <-
list("Age" =
list("min" = ~ min(age),
"max" = ~ max(age),
"mean (sd)" = ~ qwraps2::mean_sd(age)),
"Education" =
list("No Education" = ~ qwraps2::n_perc0(educ == 'no_educ'),
"Elementary"  = ~ qwraps2::n_perc0(educ == 'elementary'),
"Middle School"  = ~ qwraps2::n_perc0(educ == 'middle_sch'),
"High School"  = ~ qwraps2::n_perc0(educ == 'high_sch'),
"University and Above"  = ~ qwraps2::n_perc0(educ == 'uni_above'))
)
options(qwraps2_markup = "markdown")
summary_table(gss, our_summary1)
summary(gss)
library((reporttools)
)
library(reporttools)
install.packages('reporttools')
library(reporttools)
cap1 <- "Summary characteristics."
tableNominal(vars = gss, cap = cap1, vertical = FALSE, lab =
"tab: summary", longtable = FALSE)
vars1 <- gss[, c("educ", "sex", "marrige", "internet_use", "eng_listen", "eng_speak")]
vars1 <- gss[, c("educ", "sex", "marriage", "internet_use", "eng_listen", "eng_speak")]
cap1 <- "Summary characteristics."
tableNominal(vars = vars1, cap = cap1, vertical = FALSE, lab =
"tab: summary", longtable = FALSE)
summary(gss)
stargazer::stargazer(gss)
stargazer::stargazer(gss, type = 'text')
gss <- cgss %>%
select(-c(a69,a7a,a2 ,a62 ,a8a ,a8b ,
a285,a51 ,a52, a301, a302, a303))%>%
sjlabelled::remove_all_labels(efc)
gss <- cgss %>%
select(-c(a69,a7a,a2 ,a62 ,a8a ,a8b ,
a285,a51 ,a52, a301, a302, a303))%>%
sjlabelled::remove_all_labels()
stargazer::stargazer(gss, type = 'text')
vars1 <- gss[, c("sex", "educ", "marriage")]
cap1 <- "summary"
tableNominal(vars = vars1, cap = cap1, vertical = FALSE, lab =
+ "tab: nominal1", longtable = FALSE)
tableNominal(vars = vars1, cap = cap1, vertical = FALSE,
lab ="tab: nominal1", longtable = FALSE)
vars3 <- gss[, c("lg_hinc", "age", "pinc_10k")]
cap3 <- "data summary."
vars3 <- gss[, c("lg_hinc", "age", "pinc_10k")]
cap3 <- "data summary."
tableDate(vars = vars3, stats =c("n", "min", "max", "na"),
cap = cap3, lab ="tab: data1", longtable = FALSE)
tableDate(vars = vars3, stats =c("n", "min", "q1", "median", "mean", "q3", "max",
"s", "iqr","na"),
cap = cap3, lab ="tab: data1", longtable = FALSE)
tableDate(vars = vars3, stats =c("n", "min", "q1", "median", "mean", "q3", "max",
"s", "iqr","na"),
cap = cap3, lab ="tab: data1", longtable = FALSE)
tableDate(vars = vars3, stats =c("n", "min", "median", "mean",  "max", "s","na"),
cap = cap3, lab ="tab: data1", longtable = FALSE)
tableDate(vars = vars3, stats =c("n", "min", "median", "mean",  "max","na"),
cap = cap3, lab ="tab: data1", longtable = FALSE)
rm(attr(gss$age, "format.stata"))
attr(gss$age, "format.stata") < NA
attr(gss$age, "format.stata") <- NA
remove(attr(gss$age, "format.stata"))
vars3 <- gss[, c("lg_hinc", "pinc_10k")]
cap3 <- "data summary."
tableDate(vars = vars3, stats =c("n", "min", "median", "mean",  "max","na" "s"),
tableDate(vars = vars3, stats =c("n", "min", "median", "mean",  "max","na","s"),
cap = cap3, lab ="tab: data1", longtable = FALSE)
stargazer::stargazer(gss, type = 'text')
vars1 <- gss[, -c("stereotype", "age", "lg_hinc","lg_pwinc",
"hinc_10k","pinc_10k","pwinc_10k")]
vars1 <- gss%>%select(-("stereotype", "age", "lg_hinc","lg_pwinc",
vars1 <- gss[, -c("stereotype", "age", "lg_hinc","lg_pwinc",
"hinc_10k","pinc_10k")]
vars1 <- gss[, c("educ", "sex", "internet_use","eng_listen",
"eng_speak","marriage")]
cap1 <- "summary"
tableNominal(vars = vars1, cap = cap1, vertical = FALSE,
lab ="tab: nominal1", longtable = FALSE)
stargazer::stargazer(gss)
table(gss$stereotype)
gss <- gss%>%mutate(stereo = ifelse(stereotype>0, stereotype, NA))%>%
stargazer::stargazer(gss)
cgss <- data%>%
select(a421, # dependent
a69,a7a,a2 ,a62 ,a8a ,a8b ,
a285,a51 ,a52, a301, a302, a303)%>%
mutate(age = 2015 -a301)%>% # recode to age
mutate(stereotype = ifelse(a421>0, a421, NA))%>%
mutate(educ = case_when( # recode to the education
is.na(a7a) ~ NA_real_,
a7a ==1 ~ 1,
a7a>1 & a7a<4 ~ 2,
a7a ==4 ~ 3,
a7a>4 & a7a<9 ~ 4,
a7a>9 & a7a<14 ~ 5,
TRUE ~ NA_real_))%>%
mutate(educ = as.factor(educ))%>%
mutate(sex = as.factor(a2))
levels(cgss$educ) <- c('no_educ','elementary','middle_sch','high_sch','uni_above')
levels(cgss$sex) <- c('male', 'female')
# log the income
cgss <-cgss%>%mutate(lg_hinc = case_when(a62 < 0 ~ NA_real_,
a62 ==0 ~ 0,
a62 >0 ~ log(as.numeric(a62))))%>%
mutate(lg_pinc = case_when(a8a < 0 ~ NA_real_,
a8a ==0 ~ 0,
a8a >0 ~ log(as.numeric(a8a))))%>%
mutate(lg_pwinc = case_when(a8b < 0 ~ NA_real_,
a8b ==0 ~ 0,
a8b >0 ~ log(as.numeric(a8b))))
# code the personal variables
cgss <-cgss%>%mutate(internet_use = ifelse(a285>0, a285, NA))
cgss$internet_use <- as.factor(cgss$internet_use)
levels(cgss$internet_use) <-c('never', 'seldom', 'sometimes', 'often', 'very often')
cgss <-cgss%>%mutate(eng_listen = ifelse(a51>0, a51, NA))
cgss$eng_listen <- as.factor(cgss$eng_listen)
levels(cgss$eng_listen) <-c('not understand', 'poor', 'so so', 'fair', 'very good')
cgss <-cgss%>%mutate(eng_speak = ifelse(a52>0, a52, NA))
cgss$eng_speak <- as.factor(cgss$eng_speak)
levels(cgss$eng_speak) <-c('not understand', 'poor', 'so so', 'fair', 'very good')
cgss <-cgss%>%mutate(marriage = ifelse(a69>0, a69, NA))
cgss$marriage <- as.factor(cgss$marriage)
levels(cgss$marriage) <-c('unmarried', 'cohabiting', 'married_1st', 'remarried',
'seperating', 'divorced', 'widowed')
cgss <-cgss%>%mutate(hinc_10k = case_when(a62 < 0 ~ NA_real_,
a62 ==0 ~ 0,
a62 >0 ~ as.numeric(a62)/10000))%>%
mutate(pinc_10k = case_when(a8a < 0 ~ NA_real_,
a8a ==0 ~ 0,
a8a >0 ~ as.numeric(a8a)/10000))%>%
mutate(pwinc_10k = case_when(a8b < 0 ~ NA_real_,
a8b ==0 ~ 0,
a8b >0 ~ as.numeric(a8b)/10000))
gss <- cgss %>%
select(-c(a69,a7a,a2 ,a62 ,a8a ,a8b ,
a285,a51 ,a52, a301, a302, a303))%>%
sjlabelled::remove_all_labels()
gss <- cgss %>%
select(-c(a421,a69,a7a,a2 ,a62 ,a8a ,a8b ,
a285,a51 ,a52, a301, a302, a303))%>%
sjlabelled::remove_all_labels()
stargazer::stargazer(gss)
rm(list = ls())
Y <- c(rep(1, 38), rep(0, 542-38), rep(1, 55), rep(0, 542-55),
rep(1, 46), rep(0, 541-46), rep(1, 71), rep(0, 541-71),
rep(1, 37), rep(0, 670-37), rep(1, 48), rep(0, 670-48),
rep(1, 36), rep(0, 682-36), rep(1, 61), rep(0, 682-61))
boston <- c(rep(1, 542+542+541+541), rep(0, 670+670+682+682))
chicago <- 1-boston
lowquality <- c(rep(1, 542+542), rep(0, 541+541), rep(1, 670+670), rep(0, 682+682))
highquality <- 1-lowquality
black<- c(rep(1, 542), rep(0,542), rep(1, 541), rep(0,541),
rep(1, 670), rep(0,670), rep(1, 682), rep(0,682))
white <- 1-black
fit_1 <- lm(Y ~ white + highquality + chicago + white*highquality +
white*chicago + highquality*chicago + white*highquality*chicago)
fit_2 <- lm(Y ~ black + highquality + chicago + black*highquality +
black*chicago + highquality*chicago + black*highquality*chicago)
fit_3 <- lm(Y ~ white + highquality + boston + white*highquality +
white*boston + highquality*boston + white*highquality*boston)
fit_4 <- lm(Y ~ black + lowquality + chicago + black*lowquality +
black*chicago + lowquality*chicago + black*lowquality*chicago)
stargazer::stargazer(fit_1, fit_2, fit_3, fit_4, style = "apsr", type = "text")
rm(list = ls())
remove.packages(raw)
#Clear any previous work
rm(list=ls(all=TRUE))
#Load Relevant packages
library(foreign)
#Read in Data from Internet
bedout <- read.dta("http://hdl.handle.net/10079/xksn0db")
bedout
library(ri)
?genperms
genperms
lm1$coefficients
rm(list = ls())
combn
?combn
combn(letters[1:4], 2)
combn(letters[1:4], 4)
combn(c(1,1,1,1,2,2,2,3,3,4), 3, tabulate, nbins = 4)
rm(list = ls())
remove.packages("rmdformats")
rm(list = ls())
install.packages('rmdformats')
rm(list=ls())       # clear objects in memory
library(ri)
# schedule of potential outcomes for problem 10.3
Z <- c(0,0,0,0,0,0,1,1,1,1,1,1)
Y0M0 = c(0,0,0,0,0,0,1,1,1,0,0,0)
Y1M0 = c(0,0,0,1,1,1,0,0,0,1,1,1)
Y0M1 = c(0,0,0,0,0,0,1,1,1,1,1,1)
Y1M1 = c(0,0,0,1,1,1,1,1,1,1,1,1)
M0 = c(0,0,1,0,0,1,0,0,1,0,0,1)
M1 = c(0,1,1,0,1,1,0,1,1,0,1,1)
# verify column averages
mean(Y0M0)
mean(Y1M0)
mean(Y0M1)
mean(Y1M1)
# simulate all possible random assignments
perms <- genperms(Z)
?genperms
genperms
combn
coefmat <- matrix(NA,ncol(perms),3)  # stores estimates from equation 10.3
tcoefmat <- matrix(NA,ncol(perms),2) # stores estimates from equation 10.2
mcoefmat <- matrix(NA,ncol(perms),2) # stores estimates from equation 10.1
for (i in 1:ncol(perms)) {
Zri <- perms[,i]
M <- M0*(1-Zri) + M1*Zri
Y <- Y0M0*(1-Zri)*(1-M) + Y1M0*(Zri)*(1-M) + Y0M1*(1-Zri)*(M) + Y1M1*(Zri)*(M)
coefmat[i,] <- lm(Y~M+Zri)$coefficients
tcoefmat[i,] <- lm(Y~Zri)$coefficients
mcoefmat[i,] <- lm(M~Zri)$coefficients
}
# results omit instances of perfect colinearity between M and Z
colMeans(na.omit(coefmat))  # report the avg coefficients from a regression of Y on M and Z
colMeans(na.omit(tcoefmat)) # report the avg coefficients from a regression of Y on Z
colMeans(na.omit(mcoefmat)) # report the avg coefficients from a regression of M on Z
View(coefmat)
View(coefmat)
colMeans(coefmat)
nona <- na.omit(coefmat)
View(nona)
coefmat[1:10,]
nona[1:10,]
rm(nona)
na.omit
is.na(coefmat)
library(tidyverse)
df <-as.tibble(coefmat)
na.omit(df)
df <-mutate(df, id = row_number())
dfno <- na.omit(df)
no <- anti_join(df, dfno)
View(no)
no$id
df <-as.tibble(tcoefmat)
df <-mutate(df, id = row_number())
dfno <- na.omit(df)
no <- anti_join(df, dfno)
df <-as.tibble(mcoefmat)
df <-mutate(df, id = row_number())
dfno <- na.omit(df)
View(mcoefmat)
colMeans(na.omit(mcoefmat))
df <-as.tibble(mcoefmat)
df <-mutate(df, id = row_number())
dfno <- na.omit(df)
mean(df$V1)
mean(df$V2)
View(tcoefmat)
View(coefmat)
View(mcoefmat)
head(df)
head(mcoefmat)
rm(list=ls())       # clear objects in memory
library(ri)         # load the RI package
set.seed(123908)   # random number seed, so that results are reproducible
setwd("~/16Spring/4368 Experimental/4.FEDAI replication/Chapter 9")
library(foreign)    # package allows R to read Stata datasets
rindb <- read.dta("Rind_Bordia_JASP_1996.dta")
setwd("~/MA/2019Spring/RAship/FEDAI/FEDAI data/Chapter 9")
rm(list=ls())       # clear objects in memory
library(ri)         # load the RI package
set.seed(123908)   # random number seed, so that results are reproducible
setwd("~/16Spring/4368 Experimental/4.FEDAI replication/Chapter 9")
library(foreign)    # package allows R to read Stata datasets
rindb <- read.dta("Rind_Bordia_JASP_1996.dta")
head(rindb)  # show a snippet of the data
Z <- as.integer(rindb$happyface) - 1   # generate a treatment indicator
table(Z)
table(female)
table(female)
female <- as.integer(rindb$female) - 1   # generate a treatment indicators of waitstaff sex
table(female)
lmmodel <- lm(Y~Z+female)    # regression model without interaction
Y <- rindb$tip
Y0 <- Y - lmmodel$coefficients["Z"] * Z
lmmodel <- lm(Y~Z+female)    # regression model without interaction
Y0 <- Y - lmmodel$coefficients["Z"] * Z
Y1 <- Y + lmmodel$coefficients["Z"] * (1 - Z)
Y0
Y1
lmmodelint <- lm(Y~Z*female)      # regression with interaction between happyface and waitstaff sex
f.obs <- lmtest::waldtest(lmmodelint, lmmodel)$F[2]
f.obs
library(foreign)
rm(list = ls())
expand_data<- read.dta("Fieldhouse_et_al_unpublished_2010_expanded.dta")
names(expand_data)
library(dplyr)
problem9 <- rename(expand_data,
mail=m,
phone_assign=p,
phone_contact=c,
vote=y,
phone_contact.mail=c_m,
phone_assign.mail=p_m)
ols1 <- lm(phone_contact ~ mail * phone_assign,data=problem9)
ols2 <- lm(phone_contact.mail~ mail * phone_assign, data = problem9)
ols3 <- lm(vote ~ phone_contact*mail, data = problem9)
library(AER)
tslsmodel <- ivreg(vote  ~ mail*phone_contact | mail * phone_assign,data = problem9)
summary(tslsmodel)
tslsmodel
stargazer::stargazer(ols1, ols2, ols3, type = 'text')
tslsmodel
str(tslsmodel)
str(tslsmodel, max.level = 2)
# Exercise 4.4 (teachers experiment)
rm(list=ls())       # clear objects in memory
library(ri)         # load the RI package
set.seed(1234567)   # random number seed, so that results are reproducible
setwd("~/MA/2019Spring/RAship/FEDAI/FEDAI data/Chapter 4")
library(foreign)    # package allows R to read Stata datasets
teach <- read.dta("Teachers data for Table 4-1.dta")
colnames(teach)
Z  <- teach$D       # treatment
Y1 <- teach$y1      # treated potential outcome
Y0 <- teach$y0      # untreated potential outcome
X <- teach$x        # pre-test
Y <- Y0*(1-Z) + Y1*(Z)    # observed outcomem given random assignment
N <- length(Z)
# two equivalent ways to estimate the ATE: regression and difference-in-means
summary(lm(Y~Z))
mean(Y[Z==1])-mean(Y[Z==0])
# a diagnostic test to assess whether rescaling the outcome as a change
# rather than a level is likely to improve the precision
# with which the ATE is estimated (see equation 4.6)
lm(Y~X,subset=Z==1)
lm(Y~X,subset=Z==0)
Ydiff <- Y-X
summary(lm(Ydiff~Z))
summary(lm(Y~Z+X))   # estimate the ATE using covariate adjustment
perms <- genperms(Z,maxiter=10000)  # simulate possible random allocations
probs <- genprobexact(Z)
ate <- estate(Y,Z,prob=probs)       # estimate the ATE
Ys <- genouts(Y,Z,ate=0)            # calculate potential outcomes under sharp null of 0 effect for all units
genouts
perms <- genperms(Z,maxiter=10)  # simulate possible random allocations
probs <- genprobexact(Z)
ate <- estate(Y,Z,prob=probs)       # estimate the ATE
ate
estate
Ys <- genouts(Y,Z,ate=0)            # calculate potential outcomes under sharp null of 0 effect for all units
Ys
mean(Ys)
Ys$Y0
mean(Ys$Y0)
mean(Ys$Y1)
Ys2 <- genouts(Y,Z,ate=ate)   # generate potential outcomes assuming that the true treatment effect for every unit is equal to the estimated ATE
Ys2
mean(Ys2$Y1)
mean(Ys2$Y0)
mean(Ys2$Y1)-mean(Ys2$Y0)
Ys2 <- genouts(Y,Z,ate=ate)   # generate potential outcomes assuming that the true treatment effect for every unit is equal to the estimated ATE
distout2 <- gendist(Ys2,perms,prob=probs)
ate
dispdist(distout2,ate)        # display the sampling distribution under the assumed treatment effect in order to obtain the confidence interval
Ys2
distout2
gendist
Ys2
genouts
gendist
estate
