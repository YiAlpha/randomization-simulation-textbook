setwd("~/16Spring/4368 Experimental/4.FEDAI replication/Chapter 8")
rm(list=ls())       # clear objects in memory
library(ri)         # load the RI package
set.seed(1234567)   # random number seed, so that results are reproducible
library(foreign)    # package allows R to read Stata datasets
setwd("~/16Spring/4368 Experimental/4.FEDAI replication/Chapter 8")
# Data are from Hough, Leslie. 2010. “Experimenting with an N of 1.” Yale University Working Paper.
hough <- read.dta("Chapter 8_Leslie Hough self-experiment data.dta")
# Part (b)
Y <- hough$tetris
Z <- hough$run
N <- length(Z)
Zlag <- c(NA,Z[2:N-1]) # exclude day 1 from analysis
Ylag <- c(NA,Y[2:N-1])
View(hough)
randfun <- function() rbinom(N,1,.5)    # simple random assignment based on coin flips
numiter <- 10000
perms <- genperms.custom(numiter=numiter,randfun=randfun)  # random assignment follows the custom function "randfun"
## note on missing data: the default for LM is NA.omit=TRUE
## This default eliminates the first lagged observation and the two days with missing outcomes
test1 <- lm(Y~Z)$coefficients["Z"]             # regress Y on current Z
test1
test2 <- summary(lm(Y~Z+Zlag))$fstatistic[1]   # regress Y on current and lagged Z
test2
test3 <- lm(Ylag~Z)$coefficients["Z"]          # placebo test: regress lagged Y on Z
test3 <
test3
test4 <- lm(hough$energy~Z)$coefficients["Z"]  # consider current Z's effects on energy
test5 <- lm(hough$gre~Z)$coefficients["Z"]     # consider current Z's effects on GRE
# initialize the five vectors of results (all 5 at the same time!)
testdist1 <- testdist2 <- testdist3 <- testdist4 <- testdist5 <- rep(NA,numiter)
for (i in 1:numiter) {
Zri <- perms[,i]
Zlagri <- c(NA,Zri[2:N-1]) # exclude day 1 from analysis
testdist1[i] <- lm(Y~Zri)$coefficients["Zri"]
testdist2[i] <- summary(lm(Y~Zri+Zlagri))$fstatistic[1]
testdist3[i] <- lm(Ylag~Zri)$coefficients["Zri"]
testdist4[i] <- lm(hough$energy~Zri)$coefficients["Zri"]
testdist5[i] <- lm(hough$gre~Zri)$coefficients["Zri"]
}
mean(testdist1 >= test1)      # one-tailed p-value: does running increase Tetris scores
mean(testdist2 >= test2)      # one-tailed p-value: does running increase Tetris scores
mean(testdist4 >= test4)      # one-tailed p-value: does running improve energy
mean(testdist5 >= test5)      # one-tailed p-value: does running improve GRE
(lm(Y~Z))
summary(lm(Y~Z+Zlag))
setwd("~/16Spring/4368 Experimental/3.2016session")
# Treatment Effect Heterogeneity ------------------------------------------
# what are heterogeneous treatment effects?
# potential pitfalls:
# interpreting interaction effects
# when can we make causal claims?
# multiple comparisons
# dealing with this in practice: pre-registering designs, blocking, BART
# What's our DGP?
# Some covariates:
set.seed(12345)
N <- 1000
age <- runif(n=N, min=18, max=65)
gender <- sample(c("M", "F"), size=N, replace=TRUE)
party <- sample(c("rep", "ind", "dem"), size=N, prob=c(.3, .3, .4), replace=TRUE)
Y0 <- rnorm(N, mean=5, sd=2)
Y1 <- Y0 + 0.01*age
Y1[gender == "M" & party=="rep"] <- Y1[gender == "M" & party=="rep"] + 1
Y1[gender == "M" & party=="ind"] <- Y1[gender == "M" & party=="ind"] + 3
Y1[gender == "M" & party=="dem"] <- Y1[gender == "M" & party=="dem"] + 1
Y1[gender == "F" & party=="rep"] <- Y1[gender == "F" & party=="rep"] + 1
Y1[gender == "F" & party=="ind"] <- Y1[gender == "F" & party=="ind"] + 1
Y1[gender == "F" & party=="dem"] <- Y1[gender == "F" & party=="dem"] + 1
true_ate <- mean(Y1 - Y0)
true_ate
c
tau.same<- sort(Y.obs[Z==1])- sort(Y.obs[Z==0])
tau.diff<- sort(Y.obs[Z==1], decreasing = T) - sort(Y.obs[Z==0])
Z <- complete_ra(N, N/2)
Y.obs <- Y1*Z + Y0*(1-Z)
true_ate <- mean(Y1 - Y0)
Z <- complete_ra(N, N/2)
library(randomizr)
Z <- complete_ra(N, N/2)
Y.obs <- Y1*Z + Y0*(1-Z)
tau.diff<- sort(Y.obs[Z==1], decreasing = T) - sort(Y.obs[Z==0])
tau.same
tau.diff
tau.same<- sort(Y.obs[Z==1])- sort(Y.obs[Z==0])
tau.same
var(tau.same)
var(tau.diff)
block<- rep(1:2,3)
block
block<- rep(0,0,0,1,1,1)
block<- rep(0,0,0,0,1,1,1,1)
y0<- c(0,1,1,2,2,3,4,4)
y1<- c(2,5,3,1,3,3,9,7)
tau.min <- y1-y0
tau.min
tau.max <- sort(y1,decreasing = T) - y0
tau.max
var(tau.min)
var(tau.max)
tau.min <- sort(y1)-y0
tau.min <- sort(y1)-sort(y0)
tau.max <- sort(y1,decreasing = T) -sort(y0)
var(tau.min)
var(tau.max)
tau.min <- sort(y1)-sort(y0)
tau.max <- sort(y1,decreasing = T) -sort(y0)
var(tau.min)
var(tau.max)
tau.min.block <- sort(y1[block==1])-sort(y0[block==1])+sort(y1[block==0])-sort(y0[block==0])
tau.min.block <- sort(y1[block==1],decreasing = T)-sort(y0[block==1])+sort(y1[block==0],decreasing = T)-sort(y0[block==0])
tau.max.block <- sort(y1[block==1],decreasing = T)-sort(y0[block==1])+sort(y1[block==0],decreasing = T)-sort(y0[block==0])
tau.min.block <- sort(y1[block==1])-sort(y0[block==1])+sort(y1[block==0])-sort(y0[block==0])
tau.max.block <- sort(y1[block==1],decreasing = T)-sort(y0[block==1])+sort(y1[block==0],decreasing = T)-sort(y0[block==0])
tau.min.block
tau.max.block
tau.min.block <- c(sort(y1[block==1])-sort(y0[block==1]),sort(y1[block==0])-sort(y0[block==0]))
tau.min.block
sort(y1[block==1])-sort(y0[block==1])
y1[block==1]
var(tau.min)*7/8
var(tau.max)*7/8
block<- rep(0,0,0,0,1,1,1,1)
y0<- c(0,1,1,2,2,3,4,4)
y1<- c(2,5,3,1,3,3,9,7)
y1[block==1])
y1[block==1]
block<- c(0,0,0,0,1,1,1,1)
y0<- c(0,1,1,2,2,3,4,4)
y1<- c(2,5,3,1,3,3,9,7)
y1[block==1])
y1[block==1]
tau.min <- sort(y1)-sort(y0)
tau.max <- sort(y1,decreasing = T) -sort(y0)
var(tau.min)*7/8
var(tau.max)*7/8
tau.min.block <- c(sort(y1[block==1])-sort(y0[block==1]),
sort(y1[block==0])-sort(y0[block==0]))
tau.max.block <- c(sort(y1[block==1],decreasing = T)-sort(y0[block==1]),
sort(y1[block==0],decreasing = T)-sort(y0[block==0]))
var(tau.min.block)*7/8
var(tau.max.block)*7/8
library(randomizr)
rm(list=ls())
# Some covariates:
set.seed(12345)
N <- 1000
# campaign donation?
age <- runif(n=N, min=18, max=65)
gender <- sample(c("M", "F"), size=N, replace=TRUE)
party <- sample(c("rep", "ind", "dem"), size=N, prob=c(.3, .3, .4), replace=TRUE)
Y0 <- rnorm(N, mean=5, sd=2)
Y1 <- Y0 + 0.01*age
Y1[gender == "M" & party=="rep"] <- Y1[gender == "M" & party=="rep"] + 1
Y1[gender == "M" & party=="ind"] <- Y1[gender == "M" & party=="ind"] + 3
Y1[gender == "M" & party=="dem"] <- Y1[gender == "M" & party=="dem"] + 1
Y1[gender == "F" & party=="rep"] <- Y1[gender == "F" & party=="rep"] + 1
Y1[gender == "F" & party=="ind"] <- Y1[gender == "F" & party=="ind"] + 1
Y1[gender == "F" & party=="dem"] <- Y1[gender == "F" & party=="dem"] + 1
true_ate <- mean(Y1 - Y0)
Z <- complete_ra(N, N/2)
Y.obs <- Y1*Z + Y0*(1-Z)
##### Bounds on var(tau)
tau.same<- sort(Y.obs[Z==1])- sort(Y.obs[Z==0])
tau.diff<- sort(Y.obs[Z==1], decreasing = T) - sort(Y.obs[Z==0])
var(tau.same)
var(tau.diff)
Z <- complete_ra(N, N/2)
Y.obs <- Y1*Z + Y0*(1-Z)
fit.1 <- lm(Y.obs ~ Z)
fit.1 <- lm(Y.obs ~ Z)
fit.2 <- lm(Y.obs ~ Z*age)
fit.3 <- lm(Y.obs ~ Z*gender)
fit.4 <- lm(Y.obs ~ Z*party)
fit.5 <- lm(Y.obs ~ Z*party + Z*gender)
fit.6 <- lm(Y.obs ~ Z*party*gender)
fit.5
fit.6
summary(fit.7)
fit.6 <- lm(Y.obs ~ Z*party*gender)
fit.7 <- lm(Y.obs ~ Z*age + Z*party*gender)
summary(fit.7)
summary(fit.6)
summary(fit.5)
tstats <- summary(fit.7)$coefficients[c(2,9:14),3]
biggest.t.stat.obs <- sort(abs(tstats),decreasing=TRUE)[1]
second.biggest.t.stat.obs <- sort(abs(tstats),decreasing=TRUE)[2]
summary(fit.7)
fit.7 <- lm(Y.obs ~ Z*age + Z*party*gender)
summary(fit.7)
set.seed(12345)
N <- 1000
# campaign donation?
age <- runif(n=N, min=18, max=65)
gender <- sample(c("M", "F"), size=N, replace=TRUE)
party <- sample(c("rep", "ind", "dem"), size=N, prob=c(.3, .3, .4), replace=TRUE)
Y0 <- rnorm(N, mean=5, sd=2)
Y1 <- Y0 + 0.01*age
Y1[gender == "M" & party=="rep"] <- Y1[gender == "M" & party=="rep"] + 1
Y1[gender == "M" & party=="ind"] <- Y1[gender == "M" & party=="ind"] + 3
Y1[gender == "M" & party=="dem"] <- Y1[gender == "M" & party=="dem"] + 1
Y1[gender == "F" & party=="rep"] <- Y1[gender == "F" & party=="rep"] + 1
Y1[gender == "F" & party=="ind"] <- Y1[gender == "F" & party=="ind"] + 1
Y1[gender == "F" & party=="dem"] <- Y1[gender == "F" & party=="dem"] + 1
true_ate <- mean(Y1 - Y0)
Z <- complete_ra(N, N/2)
Y.obs <- Y1*Z + Y0*(1-Z)
##### Bounds on var(tau)
tau.same<- sort(Y.obs[Z==1])- sort(Y.obs[Z==0])
tau.diff<- sort(Y.obs[Z==1], decreasing = T) - sort(Y.obs[Z==0])
var(tau.same)
var(tau.diff)
##### Multiple Comparisons RI
Z <- complete_ra(N, N/2) # assign treatment
Y.obs <- Y1*Z + Y0*(1-Z) # switching equation
fit.1 <- lm(Y.obs ~ Z)
fit.2 <- lm(Y.obs ~ Z*age)
fit.3 <- lm(Y.obs ~ Z*gender)
fit.4 <- lm(Y.obs ~ Z*party)
# look the difference between fit5, fit6
fit.5 <- lm(Y.obs ~ Z*party + Z*gender)
fit.6 <- lm(Y.obs ~ Z*party*gender)
fit.7 <- lm(Y.obs ~ Z*age + Z*party*gender)
summary(fit.7)
### How many comparisons?  7!
# p-value: we will get s.n by chance, bonferroni correction
### Critical p-value is therefor 0.05/7 = 0.007
## Suppose we wanted to take a less draconian view.
tstats <- summary(fit.7)$coefficients[c(2,9:14),3]
tstats
biggest.t.stat.obs <- sort(abs(tstats),decreasing=TRUE)[1]
second.biggest.t.stat.obs <- sort(abs(tstats),decreasing=TRUE)[2]
## Let's see how frequently we obtain first and second biggest t-stats this big under the sharp null
sims <- 10000
biggest.t.stat.sims <- rep(NA, sims)
second.biggest.t.stat.sims <- rep(NA, sims)
for(i in 1:sims){
Z.sim <- complete_ra(N, m=N/2)
fit.sim <- lm(Y.obs ~ Z.sim + age + party + gender + party:gender + Z.sim:party + Z.sim:gender + Z.sim:party:gender + Z.sim:age)
tstats.sims <- summary(fit.sim)$coefficients[c(2,9:14),3]
biggest.t.stat.sims[i] <- sort(abs(tstats.sims),decreasing=TRUE)[1]
second.biggest.t.stat.sims[i] <- sort(abs(tstats.sims),decreasing=TRUE)[2]
}
mean(biggest.t.stat.sims >= biggest.t.stat.obs & second.biggest.t.stat.sims >= second.biggest.t.stat.obs)
N <- 1000
# campaign donation?
age <- runif(n=N, min=18, max=65)
gender <- sample(c("M", "F"), size=N, replace=TRUE)
party <- sample(c("rep", "ind", "dem"), size=N, prob=c(.3, .3, .4), replace=TRUE)
Y0 <- rnorm(N, mean=5, sd=2)
Y1 <- Y0 + 0.01*age
Y1[gender == "M" & party=="rep"] <- Y1[gender == "M" & party=="rep"] + 1
Y1[gender == "M" & party=="ind"] <- Y1[gender == "M" & party=="ind"] + 3
Y1[gender == "M" & party=="dem"] <- Y1[gender == "M" & party=="dem"] + 1
Y1[gender == "F" & party=="rep"] <- Y1[gender == "F" & party=="rep"] + 1
Y1[gender == "F" & party=="ind"] <- Y1[gender == "F" & party=="ind"] + 1
Y1[gender == "F" & party=="dem"] <- Y1[gender == "F" & party=="dem"] + 1
true_ate <- mean(Y1 - Y0)
Z <- complete_ra(N, N/2)
Y.obs <- Y1*Z + Y0*(1-Z)
##### Bounds on var(tau)
tau.same<- sort(Y.obs[Z==1])- sort(Y.obs[Z==0])
tau.diff<- sort(Y.obs[Z==1], decreasing = T) - sort(Y.obs[Z==0])
var(tau.same)
var(tau.diff)
##### Multiple Comparisons RI
Z <- complete_ra(N, N/2) # assign treatment
Y.obs <- Y1*Z + Y0*(1-Z) # switching equation
fit.1 <- lm(Y.obs ~ Z)
fit.2 <- lm(Y.obs ~ Z*age)
fit.3 <- lm(Y.obs ~ Z*gender)
fit.4 <- lm(Y.obs ~ Z*party)
# look the difference between fit5, fit6
fit.5 <- lm(Y.obs ~ Z*party + Z*gender)
fit.6 <- lm(Y.obs ~ Z*party*gender)
fit.7 <- lm(Y.obs ~ Z*age + Z*party*gender)
summary(fit.7)
summary(fit.6)
summary(fit.5)
summary(fit.4)
summary(fit.6)
tstats <- summary(fit.6)$coefficients[c(2,9:14),3]
tstats <- summary(fit.6)$coefficients[c(2,9:14),3]
tstats <- summary(fit.6)$coefficients
tstats
tstats <- summary(fit.6)$coefficients[c(2,8:12),3]
tstats
summary(fit.6)
biggest.t.stat.obs <- sort(abs(tstats),decreasing=TRUE)[5]
biggest.t.stat.obs
second.biggest.t.stat.obs <- sort(abs(tstats),decreasing=TRUE)[3]
second.biggest.t.stat.obs
sims <- 10000
biggest.t.stat.sims <- rep(NA, sims)
second.biggest.t.stat.sims <- rep(NA, sims)
# careful the interaction ":" vs. "*"
for(i in 1:sims){
Z.sim <- complete_ra(N, m=N/2)
fit.sim <- lm(Y.obs ~ Z.sim + age + party + gender + party:gender +
Z.sim:party + Z.sim:gender + Z.sim:party:gender + Z.sim:age)
tstats.sims <- summary(fit.sim)$coefficients[c(2,9:14),3]
biggest.t.stat.sims[i] <- sort(abs(tstats.sims),decreasing=TRUE)[1]
second.biggest.t.stat.sims[i] <- sort(abs(tstats.sims),decreasing=TRUE)[2]
}
mean(biggest.t.stat.sims >= biggest.t.stat.obs & second.biggest.t.stat.sims >= second.biggest.t.stat.obs)
for(i in 1:sims){
Z.sim <- complete_ra(N, m=N/2)
fit.sim <- lm(Y.obs ~ Z.sim + age + party + gender + party:gender +
Z.sim:party + Z.sim:gender + Z.sim:party:gender + Z.sim:age)
tstats.sims <- summary(fit.sim)$coefficients[c(2,8:12),3]
biggest.t.stat.sims[i] <- sort(abs(tstats.sims),decreasing=TRUE)[5]
second.biggest.t.stat.sims[i] <- sort(abs(tstats.sims),decreasing=TRUE)[3]
}
mean(biggest.t.stat.sims >= biggest.t.stat.obs & second.biggest.t.stat.sims >= second.biggest.t.stat.obs)
second.biggest.t.stat.sims
rm(list=ls())       # clear objects in memory
library(ri)         # load the RI package
set.seed(1234567)   # random number seed, so that results are reproducible
library(foreign)    # package allows R to read Stata datasets
setwd("~/16Spring/4368 Experimental/4.FEDAI replication/Chapter 8")
# Data are from Hough, Leslie. 2010. “Experimenting with an N of 1.” Yale University Working Paper.
hough <- read.dta("Chapter 8_Leslie Hough self-experiment data.dta")
# Part (b)
Y <- hough$tetris
Z <- hough$run
N <- length(Z)
# lagged time variable
Zlag <- c(NA,Z[2:N-1]) # exclude day 1 from analysis
Ylag <- c(NA,Y[2:N-1])
randfun <- function() rbinom(N,1,.5)    # simple random assignment based on coin flips
numiter <- 10000
perms <- genperms.custom(numiter=numiter,randfun=randfun)  # random assignment follows the custom function "randfun"
## note on missing data: the default for LM is NA.omit=TRUE
## This default eliminates the first lagged observation and the two days with missing outcomes
test1 <- lm(Y~Z)$coefficients["Z"]             # regress Y on current Z
test2 <- summary(lm(Y~Z+Zlag))$fstatistic[1]   # regress Y on current and lagged Z (test no-persistence)
test3 <- lm(Ylag~Z)$coefficients["Z"]          # placebo test: regress lagged Y on Z (test no-anticipation)
test4 <- lm(hough$energy~Z)$coefficients["Z"]  # consider current Z's effects on energy
test5 <- lm(hough$gre~Z)$coefficients["Z"]     # consider current Z's effects on GRE
# initialize the five vectors of results (all 5 at the same time!)
testdist1 <- testdist2 <- testdist3 <- testdist4 <- testdist5 <- rep(NA,numiter)
for (i in 1:numiter) {
Zri <- perms[,i]
Zlagri <- c(NA,Zri[2:N-1]) # exclude day 1 from analysis
testdist1[i] <- lm(Y~Zri)$coefficients["Zri"]
testdist2[i] <- summary(lm(Y~Zri+Zlagri))$fstatistic[1]
testdist3[i] <- lm(Ylag~Zri)$coefficients["Zri"]
testdist4[i] <- lm(hough$energy~Zri)$coefficients["Zri"]
testdist5[i] <- lm(hough$gre~Zri)$coefficients["Zri"]
}
mean(testdist1 >= test1)      # one-tailed p-value: does running increase Tetris scores
mean(testdist2 >= test2)      # one-tailed p-value: does running increase Tetris scores (test no-persistence)
mean(abs(testdist3) >= abs(test3))  # two-tailed p-value: placebo test (test no-anticipation)
lm(Ylag~Z)
summary(lm(Ylag~Z))
testdist4[i] <- lm(hough$energy~Zri)$coefficients["Zri"]
testdist5[i] <- lm(hough$gre~Zri)$coefficients["Zri"]
mean(testdist4 >= test4)      # one-tailed p-value: does running improve energy
mean(testdist5 >= test5)      # one-tailed p-value: does running improve GRE
lm(hough$energy~Z)
lm(hough$gre~Z)
cbind(numnear,numnearB,Y00,Y01,Y10,Y11)
setwd("~/16Spring/4368 Experimental/4.FEDAI replication/Chapter 8")
rm(list = ls())
load("10of30.rdata")
library(foreign)
data<-read.dta("Hotspots example in Tables 8-4 and 8-5.dta")
setwd("~/16Spring/4368 Experimental/4.FEDAI replication/Chapter 8/Section 8.4 Hotspots")
load("10of30.rdata")
setwd("~/16Spring/4368 Experimental/4.FEDAI replication/Chapter 8/Section 8.4 Hotspots")
library(foreign)
data<-read.dta("Hotspots example in Tables 8-4 and 8-5.dta")
View(data)
names(data)
sub1 <- data[,data$prob01==0&data$prob11==0]
sub1 <- data[,data$prob10==0&data$prob11==0]
sub1 <- data[,data$prob10==0&data$prob11==0]
sub1 <- data[ ,data$prob10==0 & data$prob11==0]
sub1 <- data[ ,data$prob10!=0 & data$prob11!=0]
sub1 <- data[ ,prob10!=0 & prob11!=0]
sub1 <- data[ ,c(2,3,6,7,9:12,25,27,29)]
sub1 <- data[,c(2,3,6,7,9:12,25,27,29)]
sub1 <- data[c(2,3,6,7,9:12,25,27,29),]
sub1
mean(sub1$y01-sub1$y00)
sub1$y01-sub1$y00
sub1$y01
sub1$y00
sub2 <-data[-c(2,3,6,7,9:12,25,27,29),]
sub2
mean(sub2$y01-sub2$y00)
mean(sub2$y10-sub2$y00)
mean(sub1$y11-sub1$y00)
sub1$y01
sub1 <- data[c(2,4,6,7,9:12,25,27,29),]
mean(sub1$y01-sub1$y00)
sub1$y01-sub1$y00
sub1$y01
sub1$y00
mean(sub2$y01-sub2$y00)
sub2$y01
sub2$y00
mean(sub2$y10-sub2$y00)
sub2$y10
mean(sub1$y11-sub1$y00)
sub1$y11
mean(sub2$y11-sub2$y00)
sub2$y11
sub1$y01-sub1$y00
rm(list = ls())
data<-read.csv("nonexperimental.csv")
View(data)
sub1 <- data[data$propscore.Y10!=0,]
w<-(sub1$Y10-sub1$Y00)/sub1$propscore.Y10
mean(w)
w<-(sub1$Y10/-sub1$Y00)/sub1$propscore.Y10
mean(w)
w<-(sub1$Y10/-sub1$Y00)/sub1$propscore.Y10
mean(w)
