install.packages('KoRpus')
install.packages("koRpus")
install.koRpus.lang("en")
library(koRpus.lang.en)
library(koRpus)
install.koRpus.lang("en")
library(koRpus.lang.en)
unlink('KoRpus_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ref_test <-read_csv("Apr11_extract.csv")
head(ref_test)
View(ref_test)
ref_test <-read_csv("Apr11_extract.csv", col_names=T, )
head(ref_test)
ref_test <-read_delim("Apr11_extract.csv", col_names=T, )
ref_test <-read.csv("Apr11_extract.csv", col_names=T, )
ref_test <-read.csv("Apr11_extract.csv", col_names=T)
ref_test <-foreign::read.csv("Apr11_extract.csv", col_names=T)
library(foreign)
ref_test <-read.csv("Apr11_extract.csv", col_names=T)
ref_test <-read.csv("Apr11_extract.csv")
ref_test <-read.csv("Apr11_extract.csv")
head(ref_test)
ref_test <-read_csv2("Apr11_extract.csv")
head(ref_test)
ref_test <-read_csv2("Apr11_extract.csv",delim="\t")
ref_test <-read_csv("Apr11_extract.csv",delim="\t")
ref_test <-read_csv("Apr11_extract.csv",quote="\t")
head(ref_test)
ref_test <-read_csv("Apr11_extract.csv",quote="\t"")
ref_test <-read_csv("Apr11_extract.csv",quote="\t")
library(foreign)
ref_test <-read.csv("Apr11_extract.csv",sep = "\t" )
head(ref_test)
View(ref_test)
ref_test <-read.csv("Apr11_extract.csv",sep = "\t",
row.names=1)
ref_test$citations[1]
typeof(ref_test$citations[1])
ref_test <-read.csv("Apr11_extract.csv",sep = "\t",
row.names=1,colClasses="Character")
ref_test <-read.csv("Apr11_extract.csv",sep = "\t",
row.names=1,colClasses=Character)
ref_test <-read.csv("Apr11_extract.csv",sep = "\t",
row.names=1,colClasses=character)
ref_test <-read.csv("Apr11_extract.csv",sep = "\t",
row.names=1,colClasses="character")
ref<-ref_test%>%mutate(citations = gsub("\\[|\\]", "", citations)
)
ref<-ref_test%>%mutate(citations = gsub("\\[|\\]", "", citations),
regulations = gsub("\\[|\\]", "", regulations),
patents = gsub("\\[|\\]", "", patents))
View(ref)
mutate(citations = gsub("\\[|\\]", "", citations))
cites<-ref_test%>%select(file_name, citations)%>%
mutate(citations = gsub("\\[|\\]", "", citations))
View(cites)
cites%>%separate(citations, sep=",")
View(cites)
install.packages("splistackshape")
length(cites$citations[1])
devtools::install_github("mrdwab/splitstackshape", ref = "v1_development")
devtools::install_github("mrdwab/splitstackshape", ref = "v1_development")
library(splitstackshape)
spl_cite<-cites%>%cSplit("citations", ",")
View(spl_cite)
View(spl_cite)
long_cite <-melt(spl_cite)
long_cite <-reshape2::melt(spl_cite)
View(long_cite)
long_cite <-gather(spl_cite, key, value)
long_cite <-reshape2::melt(wide, id.vars = "file_name")
long_cite <-reshape2::melt(spl_cite, id.vars = "file_name")
View(long_cite)
long_cite <-reshape2::melt(spl_cite, id.vars = "file_name", -variable)
long_cite <-reshape2::melt(spl_cite, id.vars = "file_name")%>%
select(-variable)
long_cite <-reshape2::melt(spl_cite, id.vars = "file_name")%>%
select(-variable)%>%rename(value = cite)
long_cite <-reshape2::melt(spl_cite, id.vars = "file_name")%>%
select(-variable)%>%rename(cite=value)
long_cite%>%group_by(cite)%>%summarise(freq = n())
long_cite%>%group_by(cite)%>%
summarise(freq = n())%>%
arrange(desc(freq))
View(long_cite)
long_cite <-reshape2::melt(spl_cite, id.vars = "file_name")%>%
select(-variable)%>%rename(cite=value)%>%
filter(is.na(cite)==F)
long_cite%>%group_by(cite)%>%
summarise(freq = n())%>%
arrange(desc(freq))
rm(ref)
long_cite%>%group_by(cite)%>%
summarise(freq = n())%>%
top_n(n=10, wt =freq)
long_cite%>%group_by(cite)%>%
summarise(freq = n())%>%
top_n(n=5, wt =freq)
rm(list = ls())
library(tidyverse)
ref_test <-foreign::read.csv("Apr11_extract.csv",sep = "\t",
row.names=1,colClasses="character")
ref_test <-foreign:read.csv("Apr11_extract.csv",sep = "\t",
row.names=1,colClasses="character")
ref_test <-read.csv("Apr11_extract.csv",sep = "\t",
row.names=1,colClasses="character")
cites<-ref_test%>%select(file_name, citations)%>%
mutate(citations = gsub("\\[|\\]", "", citations))%>%
splitstackshape::cSplit("citations", ",")%>%
reshape2::melt(spl_cite, id.vars = "file_name")%>%
select(-variable)%>%rename(cite=value)%>%
filter(is.na(cite)==F)
cites<-ref_test%>%select(file_name, citations)%>%
mutate(citations = gsub("\\[|\\]", "", citations))%>%
splitstackshape::cSplit("citations", ",")%>%
reshape2::melt(id.vars = "file_name")%>%
select(-variable)%>%rename(cite=value)%>%
filter(is.na(cite)==F)
cites%>%group_by(cite)%>%
summarise(freq = n())%>%
top_n(n=5, wt =freq)
ref_test <-read.csv("reference_extract.csv",sep = "\t",
row.names=1,colClasses="character")
cites<-ref_test%>%select(file_name, citations)%>%
mutate(citations = gsub("\\[|\\]", "", citations))%>%
splitstackshape::cSplit("citations", ",")%>%
reshape2::melt(id.vars = "file_name")%>%
select(-variable)%>%rename(cite=value)%>%
filter(is.na(cite)==F)
cites%>%group_by(cite)%>%
summarise(freq = n())%>%
top_n(n=5, wt =freq)
regs<-ref_test%>%select(file_name, regulations)%>%
mutate(citations = gsub("\\[|\\]", "", regulations))%>%
splitstackshape::cSplit("citations", ",")%>%
reshape2::melt(id.vars = "file_name")%>%
select(-variable)%>%rename(cite=value)%>%
filter(is.na(cite)==F)
View(regs)
regs<-ref_test%>%select(file_name, regulations)%>%
mutate(regulations = gsub("\\[|\\]", "", regulations))%>%
splitstackshape::cSplit("citations", ",")%>%
reshape2::melt(id.vars = "file_name")%>%
select(-variable)%>%rename(cite=value)%>%
filter(is.na(cite)==F)
regs<-ref_test%>%select(file_name, regulations)%>%
mutate(regulations = gsub("\\[|\\]", "", regulations))%>%
splitstackshape::cSplit("regulations", ",")%>%
reshape2::melt(id.vars = "file_name")%>%
select(-variable)%>%rename(reg=value)%>%
filter(is.na(cite)==F)
View(regs)
regs<-ref_test%>%select(file_name, regulations)%>%
mutate(regulations = gsub("\\[|\\]", "", regulations))%>%
splitstackshape::cSplit("regulations", ",")%>%
reshape2::melt(id.vars = "file_name")%>%
select(-variable)%>%rename(reg=value)%>%
filter(is.na(reg)==F)
View(regs)
regs%>%group_by(reg)%>%
summarise(freq = n())%>%
top_n(n=5, wt =freq)
cites%>%group_by(cite)%>%
summarise(freq = n())%>%
arrange(desc(freq))%>%
top_n(n=5, wt =freq)
regs%>%group_by(reg)%>%
summarise(freq = n())%>%
arrange(desc(freq))%>%
top_n(n=5, wt =freq)
